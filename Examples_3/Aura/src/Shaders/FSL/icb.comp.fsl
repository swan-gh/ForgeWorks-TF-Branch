/*
 * Copyright (c) 2017-2022 The Forge Interactive Inc.
 *
 * This is a part of Aura.
 *
 * This file(code) is licensed under a
 * Creative Commons Attribution-NonCommercial 4.0 International License
 *
 *   (https://creativecommons.org/licenses/by-nc/4.0/legalcode)
 *
 * Based on a work at https://github.com/ConfettiFX/The-Forge.
 * You may not use the material for commercial purposes.
*/

// This compute shader resets the vertex count property of the IndirectDrawArguments struct.
// This needs to be done before triangle filtering is executed to reset it to 0.

#include "shader_defs.h.fsl"
#include "cull_resources.h.fsl"

PUSH_CONSTANT(maxDrawsRootConstant, b0)
{
	DATA(uint, mdc, None);
};

void cmdDrawIndexedPrimitive(uint tid,
                             uint commandId,
                             command_buffer cmdBuffer,
                             render_pipeline_state pipelineState,
                             constant uint* vertexDataBuffer,
                             constant uint* vertexTexCoord,
                             constant uint* vertexTangent,
                             constant uint* vertexNormal,
                             constant PerFrameConstants& uniforms,
                             constant MaterialConstants* materialConstants,
                             constant uint* drawIDs,
                             constant void* texturesArgBuffer,
                             constant uint* indirectMaterialBuffer,
                             constant IndirectDrawIndexArguments* indirectDrawArgs,
                             constant uint* filteredIndicesBuffer)
{
	const constant IndirectDrawIndexArguments& args(indirectDrawArgs[tid]);
	
	render_command cmd(cmdBuffer, commandId);

	if (args.indexCount)
	{
		// pipeline
		cmd.set_render_pipeline_state(pipelineState);
		
		// buffers
		cmd.set_fragment_buffer(texturesArgBuffer,      UNIT_VBPASS_TEXTURES);
		cmd.set_vertex_buffer(&uniforms,                UNIT_VBPASS_UNIFORMS);
		cmd.set_vertex_buffer(indirectMaterialBuffer,   UNIT_INDIRECT_MATERIAL_RW);
		cmd.set_fragment_buffer(indirectMaterialBuffer, UNIT_INDIRECT_MATERIAL_RW);
		cmd.set_vertex_buffer(drawIDs + tid,            UNIT_VBPASS_DRAWID);
		cmd.set_fragment_buffer(drawIDs + tid,          UNIT_VBPASS_DRAWID);
		cmd.set_vertex_buffer(materialConstants,        UNIT_RSMPASS_MATCONSTANTS);
		cmd.set_fragment_buffer(materialConstants,      UNIT_RSMPASS_MATCONSTANTS);
		cmd.set_vertex_buffer(vertexTangent,            UNIT_VBPASS_TANGENT);
		cmd.set_vertex_buffer(vertexNormal,             UNIT_VBPASS_NORMAL);
		cmd.set_vertex_buffer(vertexTexCoord,           UNIT_VBPASS_TEXCOORD);
		cmd.set_vertex_buffer(vertexDataBuffer,         UNIT_VBPASS_POSITION);

		cmd.draw_indexed_primitives(
						  primitive_type::triangle,                // primitive type
						  args.indexCount,                         // index count
						  filteredIndicesBuffer + args.startIndex, // index buffer
						  args.instanceCount,                      // instance count
						  args.vertexOffset,                       // base vertex
						  args.startInstance                       // base instance
		);
	}
	else
	{
		cmd.reset();
	}
}

NUM_THREADS(256, 1, 1)
void CS_MAIN(SV_DispatchThreadID(uint3) tid3)
{
    INIT_MAIN;

    uint tid = tid3.x;

	if (tid >= Get(mdc))
		RETURN();
	
	// camera view
	cmdDrawIndexedPrimitive(tid,
                            tid,
                            Get(icbContainers)[VIEW_CAMERA],
                            Get(pipelineStatesCamera)[0],
                            Get(vertexDataBuffer),
                            Get(vertexTexCoord),
                            Get(vertexTangent),
                            Get(vertexNormal),
                            AB_UPDATE_FREQ_PER_FRAME.PerFrameConstants,
                            nullptr,
                            Get(drawIDs)[0],
                            Get(texturesArgBuffer),
                            Get(indirectMaterialBufferICB),
                            Get(indirectDrawArgsBufferNoAlphaICB)[VIEW_CAMERA],
                            Get(filteredIndicesBufferICB)[VIEW_CAMERA]
	);
    cmdDrawIndexedPrimitive(tid,
                            tid + MAX_DRAWS_INDIRECT,
                            Get(icbContainers)[VIEW_CAMERA],
                            Get(pipelineStatesCamera)[1],
                            Get(vertexDataBuffer),
                            Get(vertexTexCoord),
                            Get(vertexTangent),
                            Get(vertexNormal),
                            AB_UPDATE_FREQ_PER_FRAME.PerFrameConstants,
                            nullptr,
                            Get(drawIDs)[0],
                            Get(texturesArgBuffer),
                            Get(indirectMaterialBufferICB),
                            Get(indirectDrawArgsBufferAlphaICB)[VIEW_CAMERA],
                            Get(filteredIndicesBufferICB)[VIEW_CAMERA]
	);

	// shadow view
    cmdDrawIndexedPrimitive(tid,
                            tid,
                            Get(icbContainers)[VIEW_SHADOW],
                            Get(pipelineStatesShadow)[0],
                            Get(vertexDataBuffer),
                            Get(vertexTexCoord),
                            nullptr,
                            nullptr,
                            AB_UPDATE_FREQ_PER_FRAME.PerFrameConstants,
                            nullptr,
                            Get(drawIDs)[0],
                            nullptr,
                            nullptr,
                            Get(indirectDrawArgsBufferNoAlphaICB)[VIEW_SHADOW],
                            Get(filteredIndicesBufferICB)[VIEW_SHADOW]
	);
	cmdDrawIndexedPrimitive(tid,
                            tid + MAX_DRAWS_INDIRECT,
                            Get(icbContainers)[VIEW_SHADOW],
                            Get(pipelineStatesShadow)[1],
                            Get(vertexDataBuffer),
                            Get(vertexTexCoord),
                            nullptr,
                            nullptr,
                            AB_UPDATE_FREQ_PER_FRAME.PerFrameConstants,
                            nullptr,
                            Get(drawIDs)[0],
                            Get(texturesArgBuffer),
                            Get(indirectMaterialBufferICB),
                            Get(indirectDrawArgsBufferAlphaICB)[VIEW_SHADOW],
                            Get(filteredIndicesBufferICB)[VIEW_SHADOW]
	);

	// cascades view
	for (uint32_t c = 0; c < NUM_RSM_CASCADES; ++c)
	{
		uint32_t CASCADE = VIEW_RSM_CASCADE0 + c;

        cmdDrawIndexedPrimitive(tid,
                                tid,
                                Get(icbContainers)[CASCADE],
                                Get(pipelineStatesRSMCascades)[0],
                                Get(vertexDataBuffer),
                                Get(vertexTexCoord),
                                Get(vertexTangent),
                                Get(vertexNormal),
                                AB_UPDATE_FREQ_PER_FRAME.PerFrameConstants,
                                &Get(materialConstants)[c],
                                Get(drawIDs)[0],
                                Get(texturesArgBuffer),
                                Get(indirectMaterialBufferICB),
                                Get(indirectDrawArgsBufferNoAlphaICB)[CASCADE],
                                Get(filteredIndicesBufferICB)[CASCADE]
	    );
		
        cmdDrawIndexedPrimitive(tid,
                                tid + MAX_DRAWS_INDIRECT,
                                Get(icbContainers)[CASCADE],
                                Get(pipelineStatesRSMCascades)[1],
                                Get(vertexDataBuffer),
                                Get(vertexTexCoord),
                                Get(vertexTangent),
                                Get(vertexNormal),
                                AB_UPDATE_FREQ_PER_FRAME.PerFrameConstants,
                                &Get(materialConstants)[c],
                                Get(drawIDs)[0],
                                Get(texturesArgBuffer),
                                Get(indirectMaterialBufferICB),
                                Get(indirectDrawArgsBufferAlphaICB)[CASCADE],
                                Get(filteredIndicesBufferICB)[CASCADE]
	    );
	}

    RETURN();
}
