<?xml version="1.0" encoding="UTF-8"?>
<CodeLite_Project Name="Visibility_Buffer" InternalType="Console" Version="10.0.0">
  <Plugins>
    <Plugin Name="qmake">
      <![CDATA[00020001N0005Debug0000000000000001N0007Release000000000000]]>
    </Plugin>
  </Plugins>
  <Description/>
  <Dependencies/>
  <VirtualDirectory Name="src">
    <File Name="../../src/Geometry.cpp"/>
    <File Name="../../src/Geometry.h"/>
    <File Name="../../src/Visibility_Buffer.cpp"/>
  </VirtualDirectory>
  <VirtualDirectory Name="Shaders">
    <File Name="../../src/Shaders/FSL/batch_compaction.comp.fsl"/>
    <File Name="../../src/Shaders/FSL/clear_buffers.comp.fsl"/>
    <File Name="../../src/Shaders/FSL/clear_light_clusters.comp.fsl"/>
    <File Name="../../src/Shaders/FSL/cluster_lights.comp.fsl"/>
    <File Name="../../src/Shaders/FSL/cull_resources.h"/>
    <File Name="../../src/Shaders/FSL/CurveConversion.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/deferred_pass.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/deferred_pass.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/deferred_pass_alpha.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/deferred_resources.h"/>
    <File Name="../../src/Shaders/FSL/deferred_shade.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/deferred_shade.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/deferred_shade_pointlight.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/deferred_shade_pointlight.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/display.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/display.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/godray.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/HDAO.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/HDAO.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/icb.comp.fsl" ExcludeProjConfig="Debug"/>
    <File Name="../../src/Shaders/FSL/light_cull_resources.h"/>
    <File Name="../../src/Shaders/FSL/packing.h"/>
    <File Name="../../src/Shaders/FSL/panoToCube.comp.fsl"/>
    <File Name="../../src/Shaders/FSL/resolve.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/resolve.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/resolveGodray.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/shader_defs.h"/>
    <File Name="../../src/Shaders/FSL/shading.h"/>
    <File Name="../../src/Shaders/FSL/shadow_pass.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/shadow_pass_alpha.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/shadow_pass_alpha.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/skybox.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/skybox.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/sun.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/sun.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/triangle_filtering.comp.fsl"/>
    <File Name="../../src/Shaders/FSL/vb_resources.h"/>
    <File Name="../../src/Shaders/FSL/visibilitybuffer_pass.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/visibilityBuffer_pass.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/visibilitybuffer_pass_alpha.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/visibilityBuffer_pass_alpha.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/visibilityBuffer_shade.frag.fsl"/>
    <File Name="../../src/Shaders/FSL/visibilityBuffer_shade.vert.fsl"/>
    <File Name="../../src/Shaders/FSL/ShaderList.fsl"/>
  </VirtualDirectory>
  <Dependencies Name="Release">
    <Project Name="OS"/>
    <Project Name="SpirVTools"/>
    <Project Name="Renderer"/>
    <Project Name="EASTL"/>
    <Project Name="gainput"/>
  </Dependencies>
  <Dependencies Name="Debug">
    <Project Name="OS"/>
    <Project Name="SpirVTools"/>
    <Project Name="Renderer"/>
    <Project Name="EASTL"/>
    <Project Name="gainput"/>
  </Dependencies>
  <Settings Type="Executable">
    <GlobalSettings>
      <Compiler Options="" C_Options="" Assembler="">
        <IncludePath Value="."/>
      </Compiler>
      <Linker Options=""/>
      <ResourceCompiler Options=""/>
    </GlobalSettings>
    <Configuration Name="Debug" CompilerType="GCC" DebuggerType="GNU gdb debugger" Type="Executable" BuildCmpWithGlobalSettings="append" BuildLnkWithGlobalSettings="prepend" BuildResWithGlobalSettings="append">
      <Compiler Options="-g;-O0;-std=gnu++14;-Wall;-Wno-comment;-Wno-unknown-pragmas;-Werror;-march=native;-msse4.1;" C_Options="-g;-O0;-Wall;-Werror;" Assembler="" Required="yes" PreCompiledHeader="" PCHInCommandLine="no" PCHFlags="" PCHFlagsPolicy="0">
        <IncludePath Value="."/>
        <IncludePath Value="$(ProjectPath)/../.."/>
        <IncludePath Value="$(ProjectPath)/../../../.."/>
      </Compiler>
      <Linker Options="-ludev;-ldl;-pthread;-lXrandr;$(shell pkg-config --libs gtk+-3.0)" Required="yes">
        <LibraryPath Value="$(ProjectPath)/../gainput/Debug/"/>
        <LibraryPath Value="$(ProjectPath)/../../../Unit_Tests/UbuntuCodelite/OSBase/Debug/"/>
        <LibraryPath Value="$(ProjectPath)/../../../Unit_Tests/UbuntuCodelite/Renderer/Debug/"/>
        <LibraryPath Value="$(ProjectPath)/../../../Unit_Tests/UbuntuCodelite/SpirVTools/Debug/"/>
        <LibraryPath Value="$(ProjectPath)/../../../../Common_3/Utilities/ThirdParty/OpenSource/EASTL/Linux/Debug/"/>
        <Library Value="libRenderer.a"/>
        <Library Value="libOS.a"/>
        <Library Value="libX11.a"/>
        <Library Value="libSpirVTools.a"/>
        <Library Value="libvulkan.so"/>
        <Library Value="libgainput.a"/>
        <Library Value="libEASTL.a"/>
      </Linker>
      <ResourceCompiler Options="" Required="no"/>
      <General OutputFile="$(IntermediateDirectory)/$(ProjectName)" IntermediateDirectory="./Debug" Command="./$(ProjectName)" CommandArguments="" UseSeparateDebugArgs="no" DebugArguments="" WorkingDirectory="$(IntermediateDirectory)" PauseExecWhenProcTerminates="yes" IsGUIProgram="no" IsEnabled="yes"/>
      <BuildSystem Name="Default"/>
      <Environment EnvVarSetName="&lt;Use Defaults&gt;" DbgSetName="&lt;Use Defaults&gt;">
        <![CDATA[]]>
      </Environment>
      <Debugger IsRemote="no" RemoteHostName="" RemoteHostPort="" DebuggerPath="" IsExtended="no">
        <DebuggerSearchPaths/>
        <PostConnectCommands/>
        <StartupCommands/>
      </Debugger>
      <PreBuild/>
      <PostBuild>
        <Command Enabled="no"># Src</Command>
        <Command Enabled="no">#rsync -u -r $(WorkspacePath)/../../../Middleware_3/UI/Shaders/Vulkan/ $(ProjectPath)/$(ConfigurationName)/Shaders/</Command>
        <Command Enabled="no">#rsync -u -r $(WorkspacePath)/../../../Middleware_3/Text/Shaders/Vulkan/ $(ProjectPath)/$(ConfigurationName)/Shaders/</Command>
        <Command Enabled="no">#rsync -u -r $(WorkspacePath)/../src/Shaders/Vulkan/ $(ProjectPath)/$(ConfigurationName)/Shaders/</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../../Unit_Tests/UbuntuCodelite/OSBase/$(ConfigurationName)/Shaders/ $(ProjectPath)/$(ConfigurationName)/Shaders/</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../../Unit_Tests/UbuntuCodelite/OSBase/$(ConfigurationName)/CompiledShaders/ $(ProjectPath)/$(ConfigurationName)/CompiledShaders/</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../Resources/Scripts/ $(ProjectPath)/$(ConfigurationName)/Scripts/</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../src/GPUCfg/ $(ProjectPath)/$(ConfigurationName)/GPUCfg/</Command>
        <Command Enabled="no"># Textures</Command>
        <Command Enabled="yes">rsync -u -r  --include '*/' --include '*.dds' --exclude '*' --prune-empty-dirs $(WorkspacePath)/../../../Art/SanMiguel_3/Textures/ $(ProjectPath)/$(ConfigurationName)/Textures/</Command>
        <Command Enabled="no"># Meshes</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../../../Art/SanMiguel_3/Meshes/ $(ProjectPath)/$(ConfigurationName)/Meshes/</Command>
        <Command Enabled="no"># Other</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../Resources/cameraPath.bin $(ProjectPath)/$(ConfigurationName)/</Command>
        <Command Enabled="no"># Fonts</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../Resources/Fonts/ $(ProjectPath)/$(ConfigurationName)/Fonts/</Command>
      </PostBuild>
      <CustomBuild Enabled="no">
        <RebuildCommand/>
        <CleanCommand/>
        <BuildCommand/>
        <PreprocessFileCommand/>
        <SingleFileCommand/>
        <MakefileGenerationCommand/>
        <ThirdPartyToolName>None</ThirdPartyToolName>
        <WorkingDirectory/>
      </CustomBuild>
      <AdditionalRules>
        <CustomPostBuild/>
        <CustomPreBuild>shaders
SRC = $(WorkspacePath)/../src/Shaders/FSL/&#xD;
DST = $(ProjectPath)/$(ConfigurationName)/&#xD;
fsl = python3 ../../../../Common_3/Tools/ForgeShadingLanguage/fsl.py -l VULKAN -d $(DST)/Shaders/ --verbose -b $(DST)/CompiledShaders/ --incremental --compile&#xD;
&#xD;
shaders:&#xD;
	$(foreach file, $(wildcard $(SRC)/*.fsl), $(fsl) $(file);)
</CustomPreBuild>
      </AdditionalRules>
      <Completion EnableCpp11="no" EnableCpp14="no">
        <ClangCmpFlagsC/>
        <ClangCmpFlags/>
        <ClangPP/>
        <SearchPaths/>
      </Completion>
    </Configuration>
    <Configuration Name="Release" CompilerType="GCC" DebuggerType="GNU gdb debugger" Type="Executable" BuildCmpWithGlobalSettings="append" BuildLnkWithGlobalSettings="prepend" BuildResWithGlobalSettings="append">
      <Compiler Options="-O2;-std=gnu++14;-Wall;-Wno-comment;-Wno-unknown-pragmas;-Werror;-march=native;-msse4.1;" C_Options="-O2;-Wall;-Werror;" Assembler="" Required="yes" PreCompiledHeader="" PCHInCommandLine="no" PCHFlags="" PCHFlagsPolicy="0">
        <IncludePath Value="."/>
        <IncludePath Value="$(ProjectPath)/../.."/>
        <IncludePath Value="$(ProjectPath)/../../../.."/>
      </Compiler>
      <Linker Options="-ludev;-ldl;-pthread;-lXrandr;$(shell pkg-config --libs gtk+-3.0)" Required="yes">
        <LibraryPath Value="$(ProjectPath)/../gainput/Release/"/>
        <LibraryPath Value="$(ProjectPath)/../../../Unit_Tests/UbuntuCodelite/OSBase/Release/"/>
        <LibraryPath Value="$(ProjectPath)/../../../Unit_Tests/UbuntuCodelite/Renderer/Release/"/>
        <LibraryPath Value="$(ProjectPath)/../../../Unit_Tests/UbuntuCodelite/SpirVTools/Release/"/>
        <LibraryPath Value="$(ProjectPath)/../../../../Common_3/Utilities/ThirdParty/OpenSource/EASTL/Linux/Release/"/>
        <Library Value="libRenderer.a"/>
        <Library Value="libOS.a"/>
        <Library Value="libX11.a"/>
        <Library Value="libSpirVTools.a"/>
        <Library Value="libvulkan.so"/>
        <Library Value="libgainput.a"/>
        <Library Value="libEASTL.a"/>
      </Linker>
      <ResourceCompiler Options="" Required="no"/>
      <General OutputFile="$(IntermediateDirectory)/$(ProjectName)" IntermediateDirectory="./Release" Command="./$(ProjectName)" CommandArguments="" UseSeparateDebugArgs="no" DebugArguments="" WorkingDirectory="$(IntermediateDirectory)" PauseExecWhenProcTerminates="yes" IsGUIProgram="no" IsEnabled="yes"/>
      <BuildSystem Name="Default"/>
      <Environment EnvVarSetName="&lt;Use Defaults&gt;" DbgSetName="&lt;Use Defaults&gt;">
        <![CDATA[]]>
      </Environment>
      <Debugger IsRemote="no" RemoteHostName="" RemoteHostPort="" DebuggerPath="" IsExtended="no">
        <DebuggerSearchPaths/>
        <PostConnectCommands/>
        <StartupCommands/>
      </Debugger>
      <PreBuild/>
      <PostBuild>
        <Command Enabled="no"># Src</Command>
        <Command Enabled="no">#rsync -u -r $(WorkspacePath)/../../../Middleware_3/UI/Shaders/Vulkan/ $(ProjectPath)/$(ConfigurationName)/Shaders/</Command>
        <Command Enabled="no">#rsync -u -r $(WorkspacePath)/../../../Middleware_3/Text/Shaders/Vulkan/ $(ProjectPath)/$(ConfigurationName)/Shaders/</Command>
        <Command Enabled="no">#rsync -u -r $(WorkspacePath)/../src/Shaders/Vulkan/ $(ProjectPath)/$(ConfigurationName)/Shaders/</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../../Unit_Tests/UbuntuCodelite/OSBase/$(ConfigurationName)/Shaders/ $(ProjectPath)/$(ConfigurationName)/Shaders/</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../../Unit_Tests/UbuntuCodelite/OSBase/$(ConfigurationName)/CompiledShaders/ $(ProjectPath)/$(ConfigurationName)/CompiledShaders/</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../Resources/Scripts/ $(ProjectPath)/$(ConfigurationName)/Scripts/</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../src/GPUCfg/ $(ProjectPath)/$(ConfigurationName)/GPUCfg/</Command>
        <Command Enabled="no"># Textures</Command>
        <Command Enabled="yes">rsync -u -r  --include '*/' --include '*.dds' --exclude '*' --prune-empty-dirs $(WorkspacePath)/../../../Art/SanMiguel_3/Textures/ $(ProjectPath)/$(ConfigurationName)/Textures/</Command>
        <Command Enabled="no"># Meshes</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../../../Art/SanMiguel_3/Meshes/ $(ProjectPath)/$(ConfigurationName)/Meshes/</Command>
        <Command Enabled="no"># Other</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../Resources/cameraPath.bin $(ProjectPath)/$(ConfigurationName)/</Command>
        <Command Enabled="no"># Fonts</Command>
        <Command Enabled="yes">rsync -u -r $(WorkspacePath)/../Resources/Fonts/ $(ProjectPath)/$(ConfigurationName)/Fonts/</Command>
      </PostBuild>
      <CustomBuild Enabled="no">
        <RebuildCommand/>
        <CleanCommand/>
        <BuildCommand/>
        <PreprocessFileCommand/>
        <SingleFileCommand/>
        <MakefileGenerationCommand/>
        <ThirdPartyToolName>None</ThirdPartyToolName>
        <WorkingDirectory/>
      </CustomBuild>
      <AdditionalRules>
        <CustomPostBuild/>
        <CustomPreBuild>shaders
SRC = $(WorkspacePath)/../src/Shaders/FSL/&#xD;
DST = $(ProjectPath)/$(ConfigurationName)/&#xD;
fsl = python3 ../../../../Common_3/Tools/ForgeShadingLanguage/fsl.py -l VULKAN -d $(DST)/Shaders/ --verbose -b $(DST)/CompiledShaders/ --incremental --compile&#xD;
&#xD;
shaders:&#xD;
	$(foreach file, $(wildcard $(SRC)/*.fsl), $(fsl) $(file);)</CustomPreBuild>
      </AdditionalRules>
      <Completion EnableCpp11="no" EnableCpp14="no">
        <ClangCmpFlagsC/>
        <ClangCmpFlags/>
        <ClangPP/>
        <SearchPaths/>
      </Completion>
    </Configuration>
  </Settings>
</CodeLite_Project>
