/*
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

CBUFFER(SkyboxUniformBuffer, UPDATE_FREQ_NONE, b0, binding = 0)
{
    DATA(float4x4, InverseViewProjection[VR_MULTIVIEW_COUNT], None);
};

RES(TexCube(float4), skyboxTexture, UPDATE_FREQ_NONE, t0, binding = 1);
RES(SamplerState, skyboxTextureSampler, UPDATE_FREQ_NONE, s0, binding = 2);

DECLARE_RESOURCES()

STRUCT(VSOutput)
{
    DATA(float4, Position, SV_Position);
    DATA(float3, TexCoord, TEXCOORD);
};

VSOutput VS_MAIN( SV_VertexID(uint) VertexID )
{
    INIT_MAIN;
    VSOutput Out;

    float2 uv = float2((VertexID << 1) & 2, VertexID & 2);
    float4 position = float4(uv * 2.0 - float2(1.0, 1.0), 0.0, 1.0);

    Out.Position = position;
    Out.TexCoord = mul(Get(InverseViewProjection)[VR_VIEW_ID], position).xyz;
    RETURN(Out);
}
