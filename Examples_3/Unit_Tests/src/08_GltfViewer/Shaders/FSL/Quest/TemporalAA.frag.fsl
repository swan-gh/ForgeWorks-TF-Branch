/*
 * Copyright (c) 2017-2022 The Forge Interactive Inc.
 *
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "resources.h.fsl"

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
	DATA(float2, TexCoord, TEXCOORD);
	DATA(FLAT(uint), ViewID, TEXCOORD1);
};

float3 ClipHistory(float3 clipMin, float3 clipMax, float3 history)
{
	float3 center = 0.5 * (clipMax + clipMin);
	float3 extent = 0.5 * (clipMax - clipMin);
	float3 clip = history - center;
	float3 unit = abs(clip.xyz / extent);

	float max_unit = max(unit.x, max(unit.y, unit.z));
	if (!isnan(max_unit) && max_unit > 1.0)
		return center + clip / max_unit;
	else
		return history;
}

float2 ReprojectUV(float2 uv, float depth, uint viewID)
{
	float4 reprojected = mul(Get(ReprojectionMatrix)[viewID], float4(uv * float2(2.0, 2.0) - float2(1.0, 1.0), depth, 1.0));
	reprojected /= reprojected.w;
	return reprojected.xy * float2(0.5, 0.5) + float2(0.5, 0.5);
}

void SampleMinMax3x3(Tex2DArray(float4) inputTexture, SamplerState inputSampler, float3 uv, float3 sourceSample,
	inout(float3) outClipMin, inout(float3) outClipMax)
{
	float3 clipSample;
	float3 clipMin = sourceSample;
	float3 clipMax = sourceSample;

	clipSample = SampleLvlOffsetTex2DArray(inputTexture, inputSampler, uv, 0, int2(-1, -1)).rgb;
	clipMin = min(clipMin, clipSample);
	clipMax = max(clipMax, clipSample);

	clipSample = SampleLvlOffsetTex2DArray(inputTexture, inputSampler, uv, 0, int2(-1, 0)).rgb;
	clipMin = min(clipMin, clipSample);
	clipMax = max(clipMax, clipSample);

	clipSample = SampleLvlOffsetTex2DArray(inputTexture, inputSampler, uv, 0, int2(-1, 1)).rgb;
	clipMin = min(clipMin, clipSample);
	clipMax = max(clipMax, clipSample);

	clipSample = SampleLvlOffsetTex2DArray(inputTexture, inputSampler, uv, 0, int2(0, -1)).rgb;
	clipMin = min(clipMin, clipSample);
	clipMax = max(clipMax, clipSample);

	clipSample = SampleLvlOffsetTex2DArray(inputTexture, inputSampler, uv, 0, int2(0, 1)).rgb;
	clipMin = min(clipMin, clipSample);
	clipMax = max(clipMax, clipSample);

	clipSample = SampleLvlOffsetTex2DArray(inputTexture, inputSampler, uv, 0, int2(1, -1)).rgb;
	clipMin = min(clipMin, clipSample);
	clipMax = max(clipMax, clipSample);

	clipSample = SampleLvlOffsetTex2DArray(inputTexture, inputSampler, uv, 0, int2(1, 0)).rgb;
	clipMin = min(clipMin, clipSample);
	clipMax = max(clipMax, clipSample);

	clipSample = SampleLvlOffsetTex2DArray(inputTexture, inputSampler, uv, 0, int2(1, 1)).rgb;
	clipMin = min(clipMin, clipSample);
	clipMax = max(clipMax, clipSample);

	outClipMin = clipMin;
	outClipMax = clipMax;
}

float4 PS_MAIN( VSOutput In )
{
	INIT_MAIN;
	float4 Out;

	float3 scene = SampleTex2DArray(Get(sceneTexture), Get(clampMiplessPointSampler), float3(In.TexCoord, VR_VIEW_ID(In.ViewID))).rgb;
	scene = max(float3(0.0, 0.0, 0.0), scene); // TODO: Looks like there are a bunch of NaNs in the scene

	float depth = SampleTex2DArray(Get(depthTexture), Get(clampMiplessPointSampler), float3(In.TexCoord, VR_VIEW_ID(In.ViewID))).r;
	float2 reprojectedUV = ReprojectUV(In.TexCoord, depth, VR_VIEW_ID(In.ViewID));

	float3 history = SampleTex2DArray(Get(historyTexture), Get(clampMiplessLinearSampler), float3(reprojectedUV, VR_VIEW_ID(In.ViewID))).rgb;
	history = max(float3(0.0, 0.0, 0.0), history); // TODO: Looks like there are a bunch of NaNs in the scene

	float3 clipMin;
	float3 clipMax;
	SampleMinMax3x3(Get(sceneTexture), Get(clampMiplessPointSampler), float3(In.TexCoord, VR_VIEW_ID(In.ViewID)), scene, clipMin, clipMax);

	history = ClipHistory(clipMin, clipMax, history);

	Out = float4(lerp(scene, history, 0.9), 1.0);
	RETURN(Out);
}
