/*
 * Copyright (c) 2017-2022 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "resources.h.fsl"

STRUCT(VSIn)
{
	DATA(float4, v0, TEXCOORD0);
	DATA(float4, v1, TEXCOORD1);
	DATA(float4, v2, TEXCOORD2);
	DATA(float4, up, TEXCOORD3);
};

VS_CONTROL_POINT_OUTPUT VS_MAIN( VSIn In )
{
	INIT_MAIN;
	VS_CONTROL_POINT_OUTPUT Out;

	float4 V0 = mul(Get(world), float4(In.v0.xyz, 1.0));
	Out.position = V0;

	Out.tesc_v1 = float4( mul(Get(world), float4(In.v1.xyz, 1.0)).xyz, In.v1.w);
	Out.tesc_v2 = float4( mul(Get(world), float4(In.v2.xyz, 1.0)).xyz, In.v2.w);

	float3 up = normalize(In.up.xyz);

	Out.tesc_up_x = up.x;
	Out.tesc_up_y = up.y;
	Out.tesc_up_z = up.z;
	Out.tesc_up_w = In.up.w;

	
	float theta = In.v0.w;
	float sinTheta = sin(theta);
	float cosTheta = cos(theta);

	float3 faceDir = normalize(cross(up, float3(sinTheta, 0, cosTheta)));
	float3 widthDir = normalize(cross(faceDir, up));
	
	Out.tesc_widthDir_x = widthDir.x;
	Out.tesc_widthDir_y = widthDir.y;
	Out.tesc_widthDir_z = widthDir.z;

	//For debug
	Out.tesc_widthDir_w = In.v1.w * 0.4;

	// return Out;
	RETURN(Out);
}
