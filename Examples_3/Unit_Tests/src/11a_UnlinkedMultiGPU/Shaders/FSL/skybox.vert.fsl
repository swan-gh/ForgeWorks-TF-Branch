/*
 * Copyright (c) 2017-2022 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

// Shader for Skybox in Unit Test 01 - Transformations

#define MAX_PLANETS 20

CBUFFER(uniformBlock, UPDATE_FREQ_PER_FRAME, b0, binding = 0)
{
    DATA(float4x4, mvp, None);
    DATA(float4x4, toWorld[MAX_PLANETS], None);
    DATA(float4, color[MAX_PLANETS], None);

    // Point Light Information
    DATA(float3, lightPosition, None);
    DATA(float3, lightColor, None);
};

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
    DATA(float4, TexCoord, TEXCOORD);
};

STRUCT(VSInput)
{
	DATA(float4, Position, POSITION);
};

VSOutput VS_MAIN( VSInput In )
{
	INIT_MAIN;
	VSOutput Out;
 
    float4 p = float4(In.Position.x*9, In.Position.y*9, In.Position.z*9, 1.0);
    float4x4 m =  Get(mvp);
    p = mul(m,p);
    Out.Position = p.xyww;
    Out.TexCoord = float4(In.Position.x, In.Position.y, In.Position.z,In.Position.w);
	RETURN(Out);
}
