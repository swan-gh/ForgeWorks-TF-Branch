/*
 * Copyright (c) 2017-2022 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/


STRUCT(PsIn)
{
	DATA(float4, position, SV_Position);
	DATA(float2, texCoord, TEXCOORD);
};

STRUCT(FSOutput)
{
	DATA(float4, FragmentOutput, SV_Target);
};

RES(Tex2D(float4), uTex0, UPDATE_FREQ_PER_FRAME, t0, binding = 0);
#if DENOISER_ENABLED
RES(Tex2D(float4), albedoTex, UPDATE_FREQ_PER_FRAME, t1, binding = 1);
#endif

RES(SamplerState, uSampler0, UPDATE_FREQ_NONE, s1, binding = 1);

FSOutput PS_MAIN( PsIn In )
{
    INIT_MAIN;
    FSOutput Out;
	Out.FragmentOutput = SampleTex2D(Get(uTex0), Get(uSampler0), In.texCoord);
	//Out.FragmentOutput.a = 1.f;
#if DENOISER_ENABLED
	Out.FragmentOutput.rgb *= SampleTex2D(Get(albedoTex), Get(uSampler0), In.texCoord).rgb;
#endif
    RETURN(Out);
}
