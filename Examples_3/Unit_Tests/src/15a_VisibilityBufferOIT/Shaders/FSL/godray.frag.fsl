/*
 * Copyright (c) 2017-2022 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

STRUCT(PsIn)
{
	DATA(float4, position, SV_Position);
	DATA(float2, texCoord, TEXCOORD);
};

STRUCT(FSOutput)
{
	DATA(float4, result, SV_Target);
};

RES(Tex2D(float4), uTex0, UPDATE_FREQ_PER_DRAW, t0, binding = 0);
RES(SamplerState, uSampler0, UPDATE_FREQ_NONE, s0, binding = 1);

PUSH_CONSTANT(RootConstantGodrayInfo, b0)
{
	DATA(float, exposure, None);
	DATA(float, decay, None);
	DATA(float, density, None);
	DATA(float, weight, None);
    
	DATA(float2, lightPosInSS, None);
    
	DATA(uint, NUM_SAMPLES, None);
};

FSOutput PS_MAIN( PsIn In )
{		
    INIT_MAIN;
    FSOutput Out;
	float2 deltaTexCoord = float2( In.texCoord - Get(lightPosInSS).xy );
    float2 texCoord = In.texCoord;
	    
	deltaTexCoord *= 1.0 /  float(Get(NUM_SAMPLES)) * Get(density);
    
	float illuminationDecay = 1.0;	
	Out.result = float4(0.0, 0.0, 0.0, 0.0);

    for(uint i=0; i < Get(NUM_SAMPLES) ; i++)
    {
        texCoord -= deltaTexCoord;
        float4 color = SampleTex2D(Get(uTex0), Get(uSampler0), texCoord);
			
        color *= illuminationDecay *Get(weight);
        Out.result += color;
        illuminationDecay *= Get(decay);
    }

    Out.result *= Get(exposure);
    RETURN(Out);
}