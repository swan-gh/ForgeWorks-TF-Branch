
//  batch_compaction
RES(Buffer(UncompactedDrawArguments), uncompactedDrawArgs[NUM_CULLING_VIEWPORTS], UPDATE_FREQ_PER_FRAME, t0, binding = 6);
RES(Buffer(uint), materialProps, UPDATE_FREQ_NONE, t11, binding = 1);
RES(RWBuffer(uint), indirectMaterialBuffer, UPDATE_FREQ_PER_FRAME, u19, binding = 7);
#if defined(INDIRECT_COMMAND_BUFFER)
RES(COMMAND_BUFFER, icbAlpha[NUM_CULLING_VIEWPORTS], UPDATE_FREQ_PER_FRAME, u4, binding = 20);
RES(COMMAND_BUFFER, icbNoAlpha[NUM_CULLING_VIEWPORTS], UPDATE_FREQ_PER_FRAME, u6, binding = 22);
RES(COMMAND_BUFFER, icbTransparent[NUM_CULLING_VIEWPORTS], UPDATE_FREQ_PER_FRAME, u8, binding = 24);
#endif

// clear_buffers
RES(RWBuffer(atomic_uint), indirectDrawArgsBufferAlpha[NUM_CULLING_VIEWPORTS], UPDATE_FREQ_PER_FRAME, u20, binding = 8);
RES(RWBuffer(atomic_uint), indirectDrawArgsBufferNoAlpha[NUM_CULLING_VIEWPORTS], UPDATE_FREQ_PER_FRAME, u30, binding = 9);
RES(RWBuffer(atomic_uint), indirectDrawArgsBufferTransparent[NUM_CULLING_VIEWPORTS], UPDATE_FREQ_PER_FRAME, u40, binding = 10);

// triangle_filtering
RES(ByteBuffer, vertexDataBuffer, UPDATE_FREQ_NONE, t12, binding = 2);
RES(ByteBuffer, indexDataBuffer, UPDATE_FREQ_NONE, t13, binding = 3);
RES(RWByteBuffer, filteredIndicesBuffer[NUM_CULLING_VIEWPORTS], UPDATE_FREQ_PER_FRAME, u70, binding = 13);

RES(Buffer(MeshConstants), meshConstantsBuffer, UPDATE_FREQ_NONE, t14, binding = 4);
RES(RWBuffer(UncompactedDrawArguments), uncompactedDrawArgsRW[NUM_CULLING_VIEWPORTS], UPDATE_FREQ_PER_FRAME, u60, binding = 12);

CBUFFER(batchData_rootcbv, UPDATE_FREQ_USER, b15, binding = 8)
{
	DATA(SmallBatchData, smallBatchDataBuffer[BATCH_COUNT], None);
};

DECLARE_RESOURCES()
