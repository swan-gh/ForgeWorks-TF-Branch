/*
 * Copyright (c) 2017-2022 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#define MAX_PLANETS 20

STRUCT(VSInput)
{
	DATA(float4, Position, POSITION);
	DATA(float4, Normal, NORMAL);
	DATA(float2, UV, TEXCOORD0);
};

STRUCT(VSOutput)
{
  DATA(float4, Position, SV_Position);
	DATA(float2, outUV, TEXCOORD0);
	DATA(float3, outNormal, NORMAL);
  DATA(float3, outPos, POSITION);
};

CBUFFER(SparseTextureInfo, UPDATE_FREQ_NONE, b0, binding = 9)
{
	DATA(uint, Width, None);
	DATA(uint, Height, None);
	DATA(uint, pageWidth, None);
	DATA(uint, pageHeight, None);

	DATA(uint, DebugMode, None);
	DATA(uint, ID, None);
	DATA(uint, pad1, None);
	DATA(uint, pad2, None);
	
	DATA(float4, CameraPos, None);
};

CBUFFER(uniformBlock, UPDATE_FREQ_PER_FRAME, b0, binding = 0)
{
	DATA(float4x4, mvp, None);
	DATA(float4x4, toWorld[MAX_PLANETS], None);
	DATA(float4, color[MAX_PLANETS], None);

	// Point Light Information
	DATA(float3, lightPosition, None);
	DATA(float3, lightColor, None);
};

VSOutput VS_MAIN( VSInput In )
{
	INIT_MAIN;
	VSOutput Out;

	float4x4 tempMat = mul(mvp, toWorld[ID]);
	Out.Position = mul(tempMat, float4(In.Position.xyz, 1.0f));
	
	float4 normal = normalize(mul(toWorld[ID], float4(In.Normal.xyz, 0.0f)));
	float4 pos = mul(toWorld[ID], float4(In.Position.xyz, 1.0f));

  Out.outUV = In.UV;
  Out.outNormal = normal.xyz;
  Out.outPos = pos.xyz;
	RETURN(Out);
}
