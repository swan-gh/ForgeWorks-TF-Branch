/*
 * Copyright (c) 2017-2022 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/
CBUFFER(SparseTextureInfo, UPDATE_FREQ_NONE, b0, binding = 9)
{
	DATA(uint, Width, None);
	DATA(uint, Height, None);
	DATA(uint, pageWidth, None);
	DATA(uint, pageHeight, None);

	DATA(uint, DebugMode, None);
	DATA(uint, ID, None);
	DATA(uint, pad1, None);
	DATA(uint, pad2, None);
	
	DATA(float4, CameraPos, None);
};

STRUCT(PsIn)
{    
	DATA(float4, Position, SV_Position);
	DATA(float2, UV, TEXCOORD0);
	DATA(float3, Normal, NORMAL);
	DATA(float3, Pos, POSITION);
};

float4 PS_MAIN( PsIn In )
{
	INIT_MAIN;
	float4 Out;
	float4 color = float4(0.0, 0.0, 0.0, 0.0);

	float3 viewDir = normalize(CameraPos.xyz - In.Pos);
	float fresnel = pow(max(dot(viewDir, In.Normal), 0.0f), 5.0f);
	Out = (fresnel) * float4(1.0, 0.9, 0.65, 1.0);
	Out.rgb *= 3.0f;
	RETURN(Out);
}